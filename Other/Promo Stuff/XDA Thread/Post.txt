[CENTER][IMG]http://i44.tinypic.com/v5ljd1.png[/IMG][/CENTER]



Hello guys! From the creators of Sliding Messaging Pro, I would like to announce one of our new projects: Talon for Twitter!

This one, along with klinkdawg's EvolveSMS are the two brand new apps that we have been creating the past few months. They are full of polish, features, and beautiful design and KitKat style! Both of these apps are availible on the Google Play store today, but lets get to know Talon a little first :)



-----------------------------------------------------

[B]Play Store Description:[/B]
Get fully immersed in your Twitter with this beautiful, feature PACKED Twitter client with a design that actually makes sense!

Created with Android 4.4 (KitKat) in mind. Includes full screen layouts, stunning animations and more! Of course that doesn't mean earlier versions of android get left out! The only thing that wasn't able to be recreated in Android 4.3 and below was the transparent navigation and status bars... Sorry! It just isn't possible :(

Beautiful, up-to-date layouts, designs, and neat animations isn't the only thing Talon has going for it though! The list of features is enormous as well, doing everything you could ever want from a Twitter app right off the bat. Even though it is new, I have added every single major and minor Twitter feature that I think is absolutely essential plus a ton that most people wouldn't even think of. Here is a pretty comprehensive list of its features:

Twitter features:
- Live streaming support
- Support for 2 accounts
- View your timelines (main, mentions, direct messages, links, and pictures)
- View retweets, favorites, Local and world trending, user profiles, Twitter lists, and more
- Favorite users
- Search Twitter
- Delete, favorite, retweet, quote, and reply to statuses
- view replies to statuses
- Update your profile picture, banner, location, and user description
- block, follow, and add users to lists
- search for your friends to tweet at
- Attach pictures to your tweets
- Attach locations to your tweets
- And the list goes on :)

Customization features:
- Extremely powerful developer theme engine (Read the second post :D)
- Choose between either "Talon" or "Hangouts" layouts
- Choose from 3 beautiful base themes (light, dark, and pitch black)
- Custom text sizes
- Night mode
- Auto-Refresh options
- Custom notification settings
- And many other goodies in there as well!

App Features:
- Expandable, actionable, and dynamic notification system
- Full app popup
- Full emoji support
- View in-line Twitter and Instagram pictures
- View in-line YouTube thumbnails
- Native YouTube player
- In-app browser
- Complete landscape and tablet modes
- Advance to new pages in a "windowed" viewing mode
- Never leave your timeline with in-line replies, favorites, and retweets
- Actionable toast bar so you always know where you are and can jump to the top
- Hiding action bar
- "Do not disturb" mode
- Option to always be listening for mentions ("Talon Pull" - see disclaimer in settings)
- Widget for main timeline
- DashClock Extension
- Draft system for unsent/failed tweets
- Google style pull to refresh for quick refreshing
- Save tweet pictures
- Share content with other apps, to and from Talon

You will never go back to your old Twitter client again!

Enjoy Talon and don't hesitate to contact me with questions, requests, or bugs!
Thanks!

Contact me (Luke Klinker):
Email: [email]klinkerapps@gmail.com[/email]
My Twitter: @lukeklinker
Talon's Twitter: @TalonAndroid

[URL="http://goo.gl/KCXlZk"]Google+ Beta Page[/URL]

[B]Emojis[/B]
Here are two different emoji plugins for you to choose from, choose whichever suits you best, install it and never worry about it again!
Android: https://play.google.com/store/apps/details?id=com.klinker.android.emoji_keyboard_trial
iOS 7: https://play.google.com/store/apps/details?id=com.klinker.android.emoji_keyboard_trial_ios

[B]Permissions Explained:[/B]
- Write to Storage: Saves pictures to your SD card and writes them into the cache.
- Read from Storage: Used when backing up settings.
- Location: Used for trends and attaching locations to tweets.
- Network Communication: Obviously have to be able to interact with Twitter ;)
- Network State: Used so the user can toggle background sync to only over WiFi.
- Run at Startup: Re-schedules the background refreshes.
- Keep Awake: Used for background refreshes and waking the screen.
- Vibrate: Used for the notifications.

[B]Credits:[/B]
- Jacob Klinker: to many things to list! Tons of ideas, support, and inspiration
- Aaron Klinker: Icon Design
- Other open-source libraries and resources used can be found under the 'Get Help' section in settings.



-----------------------------------------------------

[B]Screenshots:[/B]

[CENTER][IMG]http://i42.tinypic.com/dh8nwo.jpg[/IMG]   [IMG]http://i40.tinypic.com/2w1uk9h.png[/IMG]   [IMG]http://i43.tinypic.com/9kp5qp.png[/IMG]   [IMG]http://i44.tinypic.com/wapvv4.png[/IMG][/CENTER]


[YOUTUBE]-wEgkt7OXTY[/YOUTUBE]


-----------------------------------------------------

[B]Closing Comments:[/B]

I have worked really hard to bring you guys a great experience right from the start this time and it really shows, from the login screen to the timelines, you will be fully satisfied with the design, execution and finesse that Talon brings to your phone. It isn't going to take months to get up to speed like Sliding Messaging did. I have designed this to be efficient, fast, and just work, right from the start. I learned a ton from that app and Talon goes to show just how much.

Hope you enjoy it as much as I do, sound off in the comments with question, concerns, suggestion, or whatever else you feel like saying about the app!




One more thing to say before I leave you here, please remember that this is XDA, and you are all expected to be a little bit different Android users, if you are having a force close or something, I would like you to be able to post a logcat of it. If you are wondering about why I did something the way I did, then I will probably explain it to you in a programming sense instead of how I would to a normal user on the Google+ beta page or something, because that makes much more sense to me, is easier on me, and you should be able to understand it a little bit better... Just keep that in mind and stay on topic please :D





Second Post:


[B]Theming in Talon for Twitter[/B]
Real quick, before you get to far into the content, I want to let all you developers know about one of, if not the standout feature of Talon and EvolveSMS: one incredibly powerful theme engine.

Along with these apps, me and Jacob have completely redesigned and rethought our old "Theme Engine" from Sliding Messaging! Although the Sliding Messaging one was cool and great for the average user to customize, it was slow, cluttered, limited, and just bad design from a developer perspective. This won't be an issue with these apps though. We remade everything about it to bring you the ultimate themeing and customization experience, without the bloat and slowdowns. You won't be disappointed when you see what it can do!

All this theme engine takes is a little bit of knowledge about layouts and resources in Android, along with the Android SDK to compile and distribute your package as an APK, then you can make both of these apps into literally ANYTHING you want. We are able to read the layouts, drawables, and some of the colors directly from your compiled package and place them in our apps! Sweet huh, you thought this kind of design your own thing was only for homescreens :D

And the best part: it is completely free and you can easily share these themes with anyone when you are done by just sending the APK or putting it on the Google Play Store!

For more info on these and to start making Talon really your own, check out these links:

1.) [URL="https://github.com/klinker24/talon_theme"]Talon Theming Example/Walkthrough on GitHub[/URL]
2.) [URL="http://goo.gl/Odutkx"]Google+ Community Theming Section[/URL] - A great place to share so anyone can see and use your themes, not just XDA users
3.) [URL="http://goo.gl/4gJ0uF"]Google+ Theming Post[/URL]





Third Post:

[U][B]Frequently Asked Questions[/B][/U]


1.) [URL="https://plus.google.com/117432358268488452276/posts/31oSKEmMFnq"][B]Push Notifications[/B][/URL]

I am just going to say this now, before anyone asks: Push notifications will not be coming to Talon unless something changes with the Twitter APIs. I have created "Talon Pull" with is simply an always on, listening service that will receive new tweets from Twitter whenever your Twitter handle is included. To read more about this option, look at the "Talon Pull" section below the "Reasons" section.

So please do not ask me for this service, because it simply isn't going to happen unless Twitter opens it up in a newer version of their APIs. Sorry if you don't like that, that is the way it works. If you think that push notifications are a must for an app like this, don't get your hopes up, because they aren't coming any time soon. Read below for the technical reasons if you care about that kind of stuff or just think it is because I am to lazy to put them in.

[U]Reasons[/U]
This will be the more technical part of this post, if you don't want to read and understand it, then you will have to just accept my answer from above. If you don't accept that I know what I am talking about... Then by all means, read on, I will try to keep it as simple as possible.

To access Twitter, they have provided us with the REST APIs (currently version 1.1). These APIs allow developers to communicate with Twitter in real time by just submitting requests to pull data from the network. They make it relatively simple - if you know what your doing - to obtain the data that they allow you to get and store, but there are plenty of limitations to these APIs, which make sense: Twitter is a completely free service and make their money off of advertisements. They want people to use their official Twitter products (such as the web or their own Android app) to access their services because they are able to place advertisements in them and that is the only way they make money. So they just aren't going to make some things available for 3rd party developers.

One of those things is their push notification system. As I said before, they allow us to access their services with these REST APIs, but they also have a Streaming API available so that a 3rd party service such as this one could be "always connected". Sounds great right? Maybe if you weren't on a mobile phone that is... By always having these streaming services connected, you will potentially fly through your days battery charge and no amount of optimizing can save that. I have done the best I can to optimize this service, but if you want to know more about it, read below in the "Talon Pull" section

What these streaming APIs should be used for is a server side interaction that would then connect to GCM (Google Cloud Messaging) and send push notifications from there. I would love to say I am working on something like this, but it isn't possible for a developer like me. I don't have the time, resources, or knowledge to set up a complex server like this. The knowledge I could get, but I am a 20 year old kid, working off of this 1 MB/sec internet connection while being a full time college student at the University of Iowa. I wouldn't be able to handle the upkeep of the system like this or the traffic. I just don't have the backend necessary for this type of thing, and there aren't many developers who do. So push notifications from the server side? Way out of the question.

That leaves only one thing to do: wait. Maybe Twitter will open up some kind of push notification service to it's developers, but I wouldn't count on that. The ideal thing for them to do would be to set up their own GCM server for us to communicate with, but I don't see that as being likely at all because of the advertising. That would take away one of the main draws for their app, leaving it with almost nothing that 3rd party developers can't do.


[U]Talon Pull[/U] - My solution/workaround

As I said before, this is NOT push notifications. Push notifications are sent to your device to notify you from some kind of server. They aren't always on, and only turn on when your device receives the info from the web service.

Talon Pull on the other hand, uses Twitter's Streaming API to just create an "always on" service to be constantly listening for tweets that contain your Twitter Handle. The way this works is that you are signed in with your API keys after you turn on the option to enable Talon Pull. I then just create this "listener" that Twitter's servers will send new tweets to. Luckily, they will take care of most of the filtering of those tweets on their end, to reduce the load as much as possible on your device (because before the filtering, it literally will receive every single public tweet that is happening. It was amazing when I first flipped and saw the tweets flowing over my log haha). So we filter it down to as few of tweets actually reaching your device as possible, then I start broadcasting the notifications when you receive the new ones.

Overall, it is a relatively simple process, the problem with it though, you have probably already realized, you have to be constantly connected with a data service or the app won't know when to receive the new tweets. Obviously that is the part that is taking the battery, not "bloated" or "un-optimized" code as some of you I sure believed.

With the current set of Streaming API's, it isn't possible to pick up new "favorites" on your tweets or new direct messages and broadcast those. I was able to pick up and broadcast a notification for retweets of your status's, however, not at the same time as the service for mentions. So I made the executive decision to only listen for mentions.

If there was a better way, I wish I could find it. I think that this is the method that most 3rd party services use to send you those fake "push notifications". So there ya have it, hope you learned something.


[U]Conclusion[/U]
Thanks for the read, if you made it all the way, hope that gives you an idea as to why push notifications just aren't even an option at this point and what my solution to that problem has been, even if it is not ideal.﻿


2.) [URL="https://plus.google.com/117432358268488452276/posts/Kc2sB8uBYwa"][B]Translucency[/B][/URL]

Why aren’t my status bar and navigation bar translucent like in all of the screenshots?!?

This is an Android 4.4 KitKat feature only. Get a new phone/ROM if you want it.


3.) [URL="https://plus.google.com/117432358268488452276/posts/dHDRSc4J3yV"][B]Theming Support and Limitations[/B][/URL]

We have created a pretty powerful theme engine for Talon and EvolveSMS this time around, but it isn't without its limitations.

The main app color will always be orange. Don't ask to change it. That isn't something I can theme dynamically or read from an add on package, themers can change the orange glow on the in-line buttons (favorite, retweet, and send), but that is as much as your are going to get with that one.﻿


4.) [URL="https://plus.google.com/117432358268488452276/posts/hY7Aa3eSVvC"][B]Viewing users who "retweet" and "favorite" your statuses[/B][/URL]

This is another thing that isn't going to happen at this point. It isn't possible to get the user ID's or their names with the current version of the API's.

Maybe Twitter will open this up in the future, but I wouldn't get your hopes up.﻿

For now, the best you will get is the numbers on them

5.) [URL="https://plus.google.com/117432358268488452276/posts/ZgAHJxKycfv"][B]Clearing the Cache[/B][/URL]

If you know much about caching in Android, then you may wonder why in the world I would want to clear it every time you switch themes.

The answer is pretty simple: to vastly improve the performance and the smooth scrolling in the app, I save the profile pictures according to the current theme's style, whether that is circle (like the "Talon" layout) or square (like the "Hangouts" layout). This preference is also available to themers in the add-on themes.

By caching them directly as circles, it alleviates the need to do it on the fly which could consume quite a bit of processing power on older phones and would just be a complete waste to render them like that every time.﻿

You can also view the current cache size and clear it manually from "Advanced Settings".﻿